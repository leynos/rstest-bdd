name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    env:
      CARGO_TERM_COLOR: always
      CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
      CODESCENE_CLI_SHA256: ${{ vars.CODESCENE_CLI_SHA256 }}
      RUSTFLAGS: -D warnings
      RUSTDOCFLAGS: -D warnings
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            coverage: true
            features: ''
            with-default-features: true
            tools: true
          - os: ubuntu-latest
            coverage: true
            features: strict-compile-time-validation
            with-default-features: false
            tools: true
          - os: windows-latest
            coverage: true
            features: ''
            with-default-features: true
            tools: false
          - os: windows-latest
            coverage: true
            features: strict-compile-time-validation
            with-default-features: false
            tools: false
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: leynos/shared-actions/.github/actions/setup-rust@ebbaaa0d7a776ec3187f3940667e5c7c9379cdf5

      - name: Install bun
        if: ${{ matrix.tools }}
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76  # v2
        with:
          bun-version: '1.2.21'

      - name: Check formatting
        if: ${{ matrix.tools }}
        run: make check-fmt

      - name: Install Mermaid CLI
        if: ${{ matrix.tools }}
        run: |
          set -euxo pipefail
          bun install --no-progress --global @mermaid-js/mermaid-cli@11.9.0
          bun x @puppeteer/browsers browsers install chrome-headless-shell
          mmdc --version

      - name: Setup uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24  # v7.1.1
        with:
          version: 'latest'

      - name: Install Nixie
        if: ${{ matrix.tools }}
        run: uv tool install --from git+https://github.com/leynos/nixie nixie

      - name: Nixie
        if: ${{ matrix.tools }}
        run: make nixie

      - name: Markdown lint
        if: ${{ matrix.tools }}
        uses: DavidAnson/markdownlint-cli2-action@992badcdf24e3b8eb7e87ff9287fe931bcb00c6e  # v20
        with:
          globs: '**/*.md'

      - name: Lint
        if: ${{ matrix.tools }}
        run: make lint

      - name: Test and Measure Coverage (with features)
        if: ${{ matrix.coverage && matrix.features != '' }}
        uses: leynos/shared-actions/.github/actions/generate-coverage@ebbaaa0d7a776ec3187f3940667e5c7c9379cdf5
        with:
          output-path: lcov.info
          format: lcov
          features: rstest-bdd/diagnostics ${{ matrix.features }}
          with-default-features: ${{ matrix.with-default-features }}

      - name: Test and Measure Coverage (no features)
        if: ${{ matrix.coverage && matrix.features == '' }}
        uses: leynos/shared-actions/.github/actions/generate-coverage@ebbaaa0d7a776ec3187f3940667e5c7c9379cdf5
        with:
          output-path: lcov.info
          format: lcov
          features: rstest-bdd/diagnostics rstest-bdd-macros/compile-time-validation
          with-default-features: ${{ matrix.with-default-features }}

      - name: Publish dry run
        run: make publish-check

      - name: Upload coverage data to CodeScene
        if: ${{ matrix.coverage && env.CS_ACCESS_TOKEN && matrix.tools && vars.CODESCENE_CLI_SHA256 }}
        uses: leynos/shared-actions/.github/actions/upload-codescene-coverage@ebbaaa0d7a776ec3187f3940667e5c7c9379cdf5
        with:
          format: lcov
          access-token: ${{ env.CS_ACCESS_TOKEN }}
          installer-checksum: ${{ vars.CODESCENE_CLI_SHA256 }}
